{"remainingRequest":"/Users/naver/misc/react-widget-table-2/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/naver/misc/react-widget-table-2/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[\"/Users/naver/misc/react-widget-table-2/node_modules/react-hot-loader/babel.js\",[\"/Users/naver/misc/react-widget-table-2/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx","dependencies":[{"path":"/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx","mtime":1535474573801},{"path":"/Users/naver/misc/react-widget-table-2/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/naver/misc/react-widget-table-2/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport { Map } from 'immutable';\nimport { compose, withState, withHandlers, defaultProps, withPropsOnChange } from 'recompose';\nimport ScrollBar from '../ScrollBar'; // const columns = [...Array(100)].map((e, i) => {\n//   return { name: 'col-' + i, width: 60 }\n// })\n// const data = [...Array(100)].map((e, i) => {\n//   return columns.reduce((prev, f, j) => {\n//     return {\n//       ...prev,\n//       [f.name]: i + ',' + j\n//     }\n//   }, {})\n// })\n// // console.log(data);\n// const data = \n\nvar WidgetTable =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(WidgetTable, _PureComponent);\n\n  function WidgetTable(props) {\n    var _this;\n\n    _classCallCheck(this, WidgetTable);\n\n    _this = _possibleConstructorReturn(this, (WidgetTable.__proto__ || Object.getPrototypeOf(WidgetTable)).call(this, props)); // this.gridRef = React.createRef();\n\n    Object.defineProperty(_assertThisInitialized(_this), \"columnWidth\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(index) {\n        return _this.props.columns[index].width || 80;\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"rowHeight\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(index) {\n        return 40;\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"handleScroll\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event, type) {\n        // return true;\n        // if (this.ignore) {\n        //   return true;\n        // }\n        // if (type === 'center') {\n        if (event.scrollUpdateWasRequested === false) {\n          // // console.log(type, event);\n          // // console.log(this.gridRef.right.current)\n          // // this\n          // // console.log()\n          // clearTimeout(this.timer);\n          // this.timer = setTimeout(() => {\n          type !== 'left' && _this.gridRef.left.current && _this.gridRef.left.current.scrollTo({\n            scrollLeft: 0,\n            scrollTop: event.scrollTop\n          });\n          type !== 'right' && _this.gridRef.right.current && _this.gridRef.right.current.scrollTo({\n            scrollLeft: 0,\n            scrollTop: event.scrollTop\n          });\n          type !== 'top' && _this.gridRef.top.current && _this.gridRef.top.current.scrollTo({\n            scrollLeft: event.scrollLeft,\n            scrollTop: 0\n          });\n          type !== 'bottom' && _this.gridRef.bottom.current && _this.gridRef.bottom.current.scrollTo({\n            scrollLeft: event.scrollLeft,\n            scrollTop: 0\n          });\n          type !== 'center' && _this.gridRef.center.current && _this.gridRef.center.current.scrollTo({\n            scrollLeft: event.scrollLeft,\n            scrollTop: event.scrollTop\n          });\n          _this.scrollbarRef.x.current && _this.scrollbarRef.x.current.scrollTo({\n            scrollLeft: event.scrollLeft,\n            scrollTop: event.scrollTop\n          });\n          _this.scrollbarRef.y.current && _this.scrollbarRef.y.current.scrollTo({\n            scrollLeft: event.scrollLeft,\n            scrollTop: event.scrollTop\n          }); // this.props.scrollTo(event.scrollTop, event.scrollLeft);\n          // }, 200);\n          // this.ignore = true;\n          // clearTimeout(this.timer);\n          // this.timer = setTimeout(() => {\n          //   this.ignore = false;\n          // })\n        } else {// console.log('>>>>', type)\n            // console.log(event);\n          }\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"_renderGrid\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(_ref) {\n        var type = _ref.type,\n            width = _ref.width,\n            height = _ref.height,\n            columnOffset = _ref.columnOffset,\n            columnCount = _ref.columnCount,\n            rowOffset = _ref.rowOffset,\n            rowCount = _ref.rowCount;\n        var gridProps = {}; // if (type === 'center' || type === 'right') {\n\n        if (type) {\n          // // console.log(type);\n          gridProps = _objectSpread({}, gridProps, {\n            ref: _this.gridRef[type],\n            onScroll: function onScroll(event) {\n              // // console.log(event);\n              _this.handleScroll(event, type);\n            }\n          });\n        }\n\n        return React.createElement(Grid, Object.assign({\n          columnCount: columnCount // columnWidth={100}\n          ,\n          height: height || 300,\n          rowCount: rowCount || 100 // rowHeight={35}\n          ,\n          width: width || 300 // scrollTop={100}\n          ,\n          columnWidth: _this.columnWidth,\n          rowHeight: _this.rowHeight // overscanCount={5}\n\n        }, gridProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), function (_ref2) {\n          var columnIndex = _ref2.columnIndex,\n              rowIndex = _ref2.rowIndex,\n              style = _ref2.style;\n          return React.createElement(\"div\", {\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, rowOffset + rowIndex, \", \", columnOffset + columnIndex);\n        });\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"gridWidth\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(from, limit) {\n        return _this.props.columns.slice(from, from + limit).reduce(function (prev, e) {\n          return prev + e.width;\n        }, 0);\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"gridHeight\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(from, limit) {\n        return new Array(limit).fill(true).reduce(function (prev, i) {\n          return prev + _this.rowHeight(from + i);\n        }, 0); // return \n        // return this.props.columns.slice(from, from + limit).reduce((prev, e) => {\n        //   return prev + e.width;\n        // }, 0 )\n      }\n    });\n    _this.gridRef = {\n      top: React.createRef(),\n      right: React.createRef(),\n      bottom: React.createRef(),\n      left: React.createRef(),\n      center: React.createRef()\n    };\n    _this.scrollbarRef = {\n      x: React.createRef(),\n      y: React.createRef()\n    };\n    return _this;\n  }\n\n  _createClass(WidgetTable, [{\n    key: \"render\",\n    value: function render() {\n      console.log('render'); // console.log(this.props);\n\n      var fullWidth = this.gridWidth(0, this.props.columns.length);\n      var fullHeight = this.gridHeight(0, (this.props.data || []).length);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, JSON.stringify(this.props.scrollPos)), React.createElement(\"table\", {\n        border: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.props._top && React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.props._left && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this._renderGrid({\n        // columnWidth: this\n        width: this.gridWidth(0, this.props.fixedLeftCount),\n        height: this.gridHeight(0, this.props.fixedTopCount),\n        rowOffset: this.props.__top.rowOffset,\n        rowCount: this.props.__top.rowCount,\n        columnOffset: this.props.__left.columnOffset,\n        columnCount: this.props.__left.columnCount\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this._renderGrid({\n        // columnWidth: this\n        type: 'top',\n        width: this.props.width - this.gridWidth(0, this.props.fixedLeftCount) - this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n        height: this.gridHeight(0, this.props.fixedTopCount),\n        rowOffset: this.props.__top.rowOffset,\n        rowCount: this.props.__top.rowCount,\n        columnOffset: this.props.__center.columnOffset,\n        columnCount: this.props.__center.columnCount\n      })), this.props._right && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this._renderGrid({\n        // columnWidth: this\n        width: this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n        height: this.gridHeight(0, this.props.fixedTopCount),\n        rowOffset: this.props.__top.rowOffset,\n        rowCount: this.props.__top.rowCount,\n        columnOffset: this.props.__right.columnOffset,\n        columnCount: this.props.__right.columnCount\n      })), React.createElement(\"td\", {\n        rowSpan: 3,\n        vAlign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(ScrollBar, {\n        type: \"y\",\n        ref: this.scrollbarRef.y,\n        width: this.props.width,\n        height: this.props.height,\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.props._left && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this._renderGrid({\n        // columnWidth: this\n        type: 'left',\n        width: this.gridWidth(0, this.props.fixedLeftCount),\n        height: this.props.height - this.gridHeight(0, this.props.fixedTopCount) - this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n        rowOffset: this.props.__center.rowOffset,\n        rowCount: this.props.__center.rowCount,\n        columnOffset: this.props.__left.columnOffset,\n        columnCount: this.props.__left.columnCount\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, this._renderGrid({\n        type: 'center',\n        width: this.props.width - this.gridWidth(0, this.props.fixedLeftCount) - this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n        height: this.props.height - this.gridHeight(0, this.props.fixedTopCount) - this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n        rowOffset: this.props.__center.rowOffset,\n        rowCount: this.props.__center.rowCount,\n        columnOffset: this.props.__center.columnOffset,\n        columnCount: this.props.__center.columnCount\n      })), this.props._right && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, this._renderGrid({\n        // columnWidth: this\n        type: 'right',\n        width: this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n        height: this.props.height - this.gridHeight(0, this.props.fixedTopCount) - this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n        rowOffset: this.props.__center.rowOffset,\n        rowCount: this.props.__center.rowCount,\n        columnOffset: this.props.__right.columnOffset,\n        columnCount: this.props.__right.columnCount\n      }))), this.props._bottom && React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, this.props._left && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, this._renderGrid({\n        width: this.gridWidth(0, this.props.fixedLeftCount),\n        height: this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n        rowOffset: this.props.__bottom.rowOffset,\n        rowCount: this.props.__bottom.rowCount,\n        columnOffset: this.props.__left.columnOffset,\n        columnCount: this.props.__left.columnCount\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, this._renderGrid({\n        type: 'bottom',\n        width: this.props.width - this.gridWidth(0, this.props.fixedLeftCount) - this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n        height: this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n        // rowOffset: this.props.data.length - this.props.fixedBottomCount, \n        // rowCount: this.props.fixedBottomCount,\n        rowOffset: this.props.__bottom.rowOffset,\n        rowCount: this.props.__bottom.rowCount,\n        columnOffset: this.props.__center.columnOffset,\n        columnCount: this.props.__center.columnCount\n      })), this.props._right && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, this._renderGrid({\n        width: this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n        height: this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n        rowOffset: this.props.__bottom.rowOffset,\n        rowCount: this.props.__bottom.rowCount,\n        columnOffset: this.props.__right.columnOffset,\n        columnCount: this.props.__right.columnCount\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(ScrollBar, {\n        ref: this.scrollbarRef.x,\n        type: \"x\",\n        width: this.props.width,\n        height: this.props.height,\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })))))) // <table>\n      //   <tbody>\n      //     <tr>\n      //       <td>\n      //       <Grid\n      //   columnCount={1000}\n      //   // columnWidth={100}\n      //   height={300}\n      //   rowCount={100}\n      //   // rowHeight={35}\n      //   width={300}\n      //   // scrollTop={100}\n      //   columnWidth={this.columnWidth}\n      //   rowHeight={this.rowHeight}\n      //   // overscanCount={5}\n      //   onScroll={this.handleScroll}\n      // >\n      //   {({ columnIndex, rowIndex, style }) => (\n      //     <div style={style}>\n      //       {/* row {rowIndex}, column {columnIndex} */}\n      //       {rowIndex}, {columnIndex}\n      //     </div>\n      //   )}\n      // </Grid>\n      //       </td>\n      //       <td>\n      // <Grid\n      //   ref={this.gridRef}\n      //   columnCount={1000}\n      //   // columnWidth={100}\n      //   height={300}\n      //   rowCount={100}\n      //   // rowHeight={35}\n      //   columnWidth={this.columnWidth}\n      //   rowHeight={this.rowHeight}\n      //   // overscanCount={1}\n      //   width={300}\n      // >\n      //   {({ columnIndex, rowIndex, style }) => (\n      //     <div style={style}>\n      //       {rowIndex}, {columnIndex}\n      //     </div>\n      //   )}\n      // </Grid>\n      //       </td>\n      //     </tr>\n      //   </tbody>\n      // </table>\n      ;\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return WidgetTable;\n}(PureComponent);\n\nvar enhance = compose(defaultProps({\n  width: 800,\n  height: 400,\n  fixedTopCount: 1,\n  fixedLeftCount: 1,\n  fixedRightCount: 1,\n  fixedBottomCount: 1,\n  columns: [] // data: [],\n\n}), withState('scrollPos', '_updateScrollPos', Map({\n  left: 0,\n  top: 0\n})), withHandlers({\n  scrollTo: function scrollTo(_ref3) {\n    var scrollPos = _ref3.scrollPos,\n        _updateScrollPos = _ref3._updateScrollPos;\n    return function (top, left) {\n      var next = scrollPos.set('top', top).set('left', left);\n\n      if (next !== scrollPos) {\n        _updateScrollPos(next);\n      } // props.updateValue(event.target.value)\n\n    };\n  }\n}), // withState('_sTop', 'update_sTop', 0),\n// withHandlers({})\nwithPropsOnChange(['columns', 'data'], function (_ref4) {\n  var columns = _ref4.columns,\n      data = _ref4.data;\n  return {\n    _columnCount: (columns || []).length,\n    _rowCount: (data || []).length\n  };\n}), withPropsOnChange(['fixedTopCount', 'fixedLeftCount', 'fixedRightCount', 'fixedBottomCount', '_columnCount', '_rowCount'], function (_ref5) {\n  var fixedTopCount = _ref5.fixedTopCount,\n      fixedLeftCount = _ref5.fixedLeftCount,\n      fixedRightCount = _ref5.fixedRightCount,\n      fixedBottomCount = _ref5.fixedBottomCount,\n      _columnCount = _ref5._columnCount,\n      _rowCount = _ref5._rowCount;\n  return {\n    __top: {\n      // height: this.gridHeight(0, this.props.fixedTopCount),\n      rowOffset: 0,\n      rowCount: fixedTopCount\n    },\n    __bottom: {\n      // height: this.gridHeight(0, this.props.fixedTopCount),\n      // rowOffset: 0, \n      // rowCount: fixedTopCount,\n      rowOffset: _rowCount - fixedBottomCount,\n      rowCount: fixedBottomCount\n    },\n    __left: {\n      columnOffset: 0,\n      columnCount: fixedLeftCount\n    },\n    __right: {\n      columnOffset: _columnCount - fixedRightCount,\n      columnCount: fixedRightCount\n    },\n    __center: {\n      rowOffset: fixedTopCount,\n      rowCount: _rowCount - fixedTopCount - fixedBottomCount,\n      columnOffset: fixedLeftCount,\n      columnCount: _columnCount - fixedLeftCount - fixedRightCount\n    },\n    _topLeft: fixedTopCount > 0 && fixedLeftCount > 0,\n    _top: fixedTopCount > 0,\n    // _top: fixedTopCount > 0,\n    _topRight: fixedTopCount > 0 && fixedRightCount > 0,\n    _left: fixedLeftCount > 0,\n    _right: fixedRightCount > 0,\n    _bottomLeft: fixedBottomCount > 0 && fixedLeftCount > 0,\n    _bottom: fixedBottomCount > 0,\n    _bottomRight: fixedBottomCount > 0 && fixedRightCount > 0\n  };\n}));\nvar Enhance = enhance(WidgetTable);\nEnhance.propTypes = {\n  name: PropTypes.string\n};\nEnhance.defaultProps = {\n  name: 'aaa'\n};\nvar _default = Enhance;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(WidgetTable, \"WidgetTable\", \"/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx\");\n  reactHotLoader.register(enhance, \"enhance\", \"/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx\");\n  reactHotLoader.register(Enhance, \"Enhance\", \"/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/naver/misc/react-widget-table-2/src/components/WidgetTable/widget-table.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nWidgetTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"columnWidth\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"index\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"rowHeight\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"index\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleScroll\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }, {\n      \"name\": \"type\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_renderGrid\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ type, width, height, columnOffset, columnCount,\\n  rowOffset, rowCount,\\n }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"gridWidth\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"from\",\n      \"type\": null\n    }, {\n      \"name\": \"limit\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"gridHeight\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"from\",\n      \"type\": null\n    }, {\n      \"name\": \"limit\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"WidgetTable\"\n};",{"version":3,"sources":["src/components/WidgetTable/widget-table.component.jsx"],"names":["React","PureComponent","PropTypes","VariableSizeGrid","Grid","Map","compose","withState","withHandlers","defaultProps","withPropsOnChange","ScrollBar","WidgetTable","props","index","columns","width","event","type","scrollUpdateWasRequested","gridRef","left","current","scrollTo","scrollLeft","scrollTop","right","top","bottom","center","scrollbarRef","x","y","height","columnOffset","columnCount","rowOffset","rowCount","gridProps","ref","onScroll","handleScroll","columnWidth","rowHeight","columnIndex","rowIndex","style","from","limit","slice","reduce","prev","e","Array","fill","i","createRef","console","log","fullWidth","gridWidth","length","fullHeight","gridHeight","data","JSON","stringify","scrollPos","_top","_left","_renderGrid","fixedLeftCount","fixedTopCount","__top","__left","fixedRightCount","__center","_right","__right","fixedBottomCount","_bottom","__bottom","enhance","_updateScrollPos","next","set","_columnCount","_rowCount","_topLeft","_topRight","_bottomLeft","_bottomRight","Enhance","propTypes","name","string"],"mappings":"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","sourceRoot":"/Users/naver/misc/react-widget-table-2","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport { Map } from 'immutable';\nimport { compose, \n  withState,\n  withHandlers,\n  defaultProps, withPropsOnChange } from 'recompose';\nimport ScrollBar from '../ScrollBar';\n\n// const columns = [...Array(100)].map((e, i) => {\n//   return { name: 'col-' + i, width: 60 }\n// })\n\n// const data = [...Array(100)].map((e, i) => {\n//   return columns.reduce((prev, f, j) => {\n//     return {\n//       ...prev,\n//       [f.name]: i + ',' + j\n//     }\n//   }, {})\n// })\n\n// // console.log(data);\n\n// const data = \n\nclass WidgetTable extends PureComponent {\n  constructor(props) {\n    super(props);\n    // this.gridRef = React.createRef();\n    this.gridRef = {\n      top: React.createRef(),\n      right: React.createRef(),\n      bottom: React.createRef(),\n      left: React.createRef(),\n      center: React.createRef(),\n    }\n    this.scrollbarRef = {\n      x: React.createRef(),\n      y: React.createRef(),\n    }\n  }\n  columnWidth = (index) => {\n    return this.props.columns[index].width || 80;\n  }\n  rowHeight = (index) => {\n    return 40;\n  }\n  // handleScroll = (event) => {\n  //   // // console.log(event);\n  //   const { scrollLeft, scrollTop } = event;\n  //   if (this.gridRef.current) {\n  //     // // console.log(this.gridRef.current);\n  //     // requestAnimationFrame(() => {\n  //     this.gridRef.current.scrollTo({\n  //       scrollLeft, scrollTop\n  //     })\n  //     // })\n\n  //   }\n  // }\n  handleScroll = (event, type) => {\n    \n    // return true;\n    // if (this.ignore) {\n    //   return true;\n    // }\n    // if (type === 'center') {\n    if (event.scrollUpdateWasRequested === false) {\n      // // console.log(type, event);\n      // // console.log(this.gridRef.right.current)\n      // // this\n\n      // // console.log()\n      // clearTimeout(this.timer);\n      \n      // this.timer = setTimeout(() => {\n\n\n        type !== 'left' && this.gridRef.left.current && this.gridRef.left.current.scrollTo({\n          scrollLeft: 0,\n          scrollTop: event.scrollTop\n        })\n        type !== 'right' && this.gridRef.right.current && this.gridRef.right.current.scrollTo({\n          scrollLeft: 0,\n          scrollTop: event.scrollTop\n        }) \n        type !== 'top' && this.gridRef.top.current && this.gridRef.top.current.scrollTo({\n          scrollLeft: event.scrollLeft,\n          scrollTop: 0\n        }) \n        type !== 'bottom' && this.gridRef.bottom.current && this.gridRef.bottom.current.scrollTo({\n          scrollLeft: event.scrollLeft,\n          scrollTop: 0\n        }) \n        type !== 'center' && this.gridRef.center.current && this.gridRef.center.current.scrollTo({\n          scrollLeft: event.scrollLeft,\n          scrollTop: event.scrollTop\n        }) \n\n        this.scrollbarRef.x.current && this.scrollbarRef.x.current.scrollTo({\n          scrollLeft: event.scrollLeft,\n          scrollTop: event.scrollTop\n        })\n\n        this.scrollbarRef.y.current && this.scrollbarRef.y.current.scrollTo({\n          scrollLeft: event.scrollLeft,\n          scrollTop: event.scrollTop\n        })\n\n        // this.props.scrollTo(event.scrollTop, event.scrollLeft);\n      // }, 200);\n\n      // this.ignore = true;\n      // clearTimeout(this.timer);\n      // this.timer = setTimeout(() => {\n      //   this.ignore = false;\n      // })\n    } else {\n      // console.log('>>>>', type)\n      // console.log(event);\n    }\n  }\n  _renderGrid = ({ type, width, height, columnOffset, columnCount,\n    rowOffset, rowCount,\n   }) => {\n    let gridProps = {};\n    // if (type === 'center' || type === 'right') {\n    if (type) {      // // console.log(type);\n      gridProps = {\n        ...gridProps,\n        ref: this.gridRef[type],\n        onScroll: (event) => {\n          // // console.log(event);\n          this.handleScroll(event, type);\n        }\n      }\n    }\n    return (\n      <Grid\n        \n        columnCount={columnCount}\n        // columnWidth={100}\n        height={height || 300}\n        rowCount={rowCount || 100}\n        // rowHeight={35}\n        width={width || 300}\n        // scrollTop={100}\n        columnWidth={this.columnWidth}\n        rowHeight={this.rowHeight}\n        // overscanCount={5}\n        \n        {...gridProps}\n        // onScroll={this.handleScroll}\n      >\n        {({ columnIndex, rowIndex, style }) => (\n          <div style={style}>\n            {/* row {rowIndex}, column {columnIndex} */}\n            {rowOffset + rowIndex}, {columnOffset + columnIndex}\n            {/* {소ㅑㄴ. */}\n          </div>\n        )}\n      </Grid>\n    )\n  }\n\n  gridWidth = (from, limit) => {\n    return this.props.columns.slice(from, from + limit).reduce((prev, e) => {\n      return prev + e.width;\n    }, 0 )\n  }\n\n  gridHeight = (from, limit) => {\n\n    return new Array(limit)\n    .fill(true).reduce((prev, i) => {\n      return prev + this.rowHeight(from + i);\n    }, 0);\n    // return \n    // return this.props.columns.slice(from, from + limit).reduce((prev, e) => {\n    //   return prev + e.width;\n    // }, 0 )\n  }\n\n  render() {\n    console.log('render');\n    // console.log(this.props);\n\n    const fullWidth = this.gridWidth(0, this.props.columns.length);\n    const fullHeight = this.gridHeight(0, (this.props.data || []).length);\n    return (\n      <div>\n        <pre>{JSON.stringify(this.props.scrollPos)}</pre>\n      <table border={1}>\n        <tbody>\n          {this.props._top && (\n          <tr>\n            {this.props._left && (\n              <td>{this._renderGrid({\n                // columnWidth: this\n                width: this.gridWidth(0, this.props.fixedLeftCount),\n                height: this.gridHeight(0, this.props.fixedTopCount),\n                rowOffset: this.props.__top.rowOffset,\n                rowCount: this.props.__top.rowCount,\n                columnOffset: this.props.__left.columnOffset,\n                columnCount: this.props.__left.columnCount,\n              })}</td>\n            )}\n            {/* <td>top</td> */}\n\n            \n              <td>{this._renderGrid({\n                // columnWidth: this\n                type: 'top',\n                width: this.props.width -\n                this.gridWidth(0, this.props.fixedLeftCount) -\n                this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n                height: this.gridHeight(0, this.props.fixedTopCount),\n                rowOffset: this.props.__top.rowOffset,\n                rowCount: this.props.__top.rowCount,\n                columnOffset: this.props.__center.columnOffset,\n                columnCount: this.props.__center.columnCount,\n              })}</td>\n            \n            {this.props._right && (\n              <td>{this._renderGrid({\n                // columnWidth: this\n                width: this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n                height: this.gridHeight(0, this.props.fixedTopCount),\n                rowOffset: this.props.__top.rowOffset,\n                rowCount: this.props.__top.rowCount,\n                columnOffset: this.props.__right.columnOffset,\n                columnCount: this.props.__right.columnCount,\n              })}</td>\n            )}\n            <td rowSpan={3} vAlign='top'>\n            <ScrollBar\n            type='y'\n            ref={this.scrollbarRef.y}\n            width={this.props.width}\n            height={this.props.height}\n            fullWidth={fullWidth}\n            fullHeight={fullHeight}\n\n            />\n            </td>\n          </tr>\n          )}\n          <tr>\n            {this.props._left && (\n              <td>{this._renderGrid({\n                // columnWidth: this\n                type: 'left',\n                width: this.gridWidth(0, this.props.fixedLeftCount),\n                height: this.props.height -\n                this.gridHeight(0, this.props.fixedTopCount) - \n                this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n\n                rowOffset: this.props.__center.rowOffset,\n                rowCount: this.props.__center.rowCount,\n                columnOffset: this.props.__left.columnOffset,\n                columnCount: this.props.__left.columnCount,\n              })}</td>\n            )}\n            <td>{this._renderGrid({\n              type: 'center',\n              width: this.props.width -\n                this.gridWidth(0, this.props.fixedLeftCount) -\n                this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n              height: this.props.height -\n                this.gridHeight(0, this.props.fixedTopCount) - \n                this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n              rowOffset: this.props.__center.rowOffset,\n              rowCount: this.props.__center.rowCount,\n              columnOffset: this.props.__center.columnOffset,\n              columnCount: this.props.__center.columnCount,\n            })}</td>\n            {this.props._right && (\n              <td>{this._renderGrid({\n                // columnWidth: this\n                type: 'right',\n                width: this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n                height: this.props.height -\n                this.gridHeight(0, this.props.fixedTopCount) - \n                this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n\n                rowOffset: this.props.__center.rowOffset,\n                rowCount: this.props.__center.rowCount,\n                columnOffset: this.props.__right.columnOffset,\n                columnCount: this.props.__right.columnCount,\n              })}</td>\n            )}\n          </tr>\n          {this.props._bottom && (\n          <tr>\n            {this.props._left && (\n              <td>{this._renderGrid({\n                width: this.gridWidth(0, this.props.fixedLeftCount),\n                height: this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n                rowOffset: this.props.__bottom.rowOffset,\n                rowCount: this.props.__bottom.rowCount,\n                columnOffset: this.props.__left.columnOffset,\n                columnCount: this.props.__left.columnCount,\n              })}</td>\n            )}\n            <td>{this._renderGrid({\n              type: 'bottom',\n              width: this.props.width -\n              this.gridWidth(0, this.props.fixedLeftCount) -\n              this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n              height: this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n              // rowOffset: this.props.data.length - this.props.fixedBottomCount, \n              // rowCount: this.props.fixedBottomCount,\n              rowOffset: this.props.__bottom.rowOffset,\n              rowCount: this.props.__bottom.rowCount,\n              columnOffset: this.props.__center.columnOffset,\n              columnCount: this.props.__center.columnCount,\n            })}</td>\n            {this.props._right && (\n              <td>{this._renderGrid({\n                width: this.gridWidth(this.props.columns.length - this.props.fixedRightCount, this.props.fixedRightCount),\n                height: this.gridHeight(this.props.data.length - this.props.fixedBottomCount, this.props.fixedBottomCount),\n                rowOffset: this.props.__bottom.rowOffset,\n                rowCount: this.props.__bottom.rowCount,\n                columnOffset: this.props.__right.columnOffset,\n                columnCount: this.props.__right.columnCount,\n              })}</td>\n            )}\n          </tr>\n          )}\n          <tr>\n            <td colSpan={3}>\n              <ScrollBar\n                ref={this.scrollbarRef.x}\n                type='x'\n                width={this.props.width}\n                height={this.props.height}\n                fullWidth={fullWidth}\n                fullHeight={fullHeight}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      </div>\n      // <table>\n      //   <tbody>\n      //     <tr>\n      //       <td>\n      //       <Grid\n      //   columnCount={1000}\n      //   // columnWidth={100}\n      //   height={300}\n      //   rowCount={100}\n      //   // rowHeight={35}\n      //   width={300}\n      //   // scrollTop={100}\n      //   columnWidth={this.columnWidth}\n      //   rowHeight={this.rowHeight}\n      //   // overscanCount={5}\n        \n      //   onScroll={this.handleScroll}\n      // >\n      //   {({ columnIndex, rowIndex, style }) => (\n      //     <div style={style}>\n      //       {/* row {rowIndex}, column {columnIndex} */}\n      //       {rowIndex}, {columnIndex}\n      //     </div>\n      //   )}\n      // </Grid>\n      //       </td>\n\n      //       <td>\n\n      // <Grid\n      //   ref={this.gridRef}\n      //   columnCount={1000}\n      //   // columnWidth={100}\n      //   height={300}\n      //   rowCount={100}\n      //   // rowHeight={35}\n      //   columnWidth={this.columnWidth}\n      //   rowHeight={this.rowHeight}\n      //   // overscanCount={1}\n      //   width={300}\n      // >\n      //   {({ columnIndex, rowIndex, style }) => (\n      //     <div style={style}>\n      //       {rowIndex}, {columnIndex}\n      //     </div>\n      //   )}\n      // </Grid>\n      //       </td>\n      //     </tr>\n      //   </tbody>\n\n      // </table>\n    )\n  }\n}\n\nconst enhance = compose(\n  defaultProps({\n    width: 800,\n    height: 400,\n    fixedTopCount: 1,\n    fixedLeftCount: 1,\n    fixedRightCount: 1,\n    fixedBottomCount: 1,\n    columns: [],\n    // data: [],\n  }),\n  withState('scrollPos', '_updateScrollPos', Map({\n    left: 0,\n    top: 0,\n  })),\n  withHandlers({\n    scrollTo: ({ scrollPos, _updateScrollPos }) => (top, left) => {\n\n      let next = scrollPos\n        .set('top', top)\n        .set('left', left);\n\n      if (next !== scrollPos) {\n        _updateScrollPos(next);\n      }\n\n      // props.updateValue(event.target.value)\n    },\n  }),\n  // withState('_sTop', 'update_sTop', 0),\n  // withHandlers({})\n  withPropsOnChange(['columns', 'data'], ({\n    columns, data\n  }) => {\n    return {\n      _columnCount: (columns || []).length,\n      _rowCount: (data || []).length,\n    }\n  }),\n  withPropsOnChange(['fixedTopCount', 'fixedLeftCount', 'fixedRightCount', 'fixedBottomCount', '_columnCount', '_rowCount'], ({\n    fixedTopCount, fixedLeftCount, fixedRightCount, fixedBottomCount,\n    _columnCount, _rowCount,\n  }) => {\n    return {\n      __top: {\n        // height: this.gridHeight(0, this.props.fixedTopCount),\n        rowOffset: 0, \n        rowCount: fixedTopCount,\n      },\n      __bottom: {\n        // height: this.gridHeight(0, this.props.fixedTopCount),\n        // rowOffset: 0, \n        // rowCount: fixedTopCount,\n        rowOffset: _rowCount - fixedBottomCount, \n        rowCount: fixedBottomCount,\n      },\n      __left: {\n        columnOffset: 0, \n        columnCount: fixedLeftCount,\n      },\n      __right: {\n        columnOffset: _columnCount - fixedRightCount, \n        columnCount: fixedRightCount\n      },\n      __center: {\n        rowOffset: fixedTopCount,\n        rowCount: _rowCount - fixedTopCount - fixedBottomCount,\n        columnOffset: fixedLeftCount,\n        columnCount: _columnCount - fixedLeftCount - fixedRightCount\n      },\n      _topLeft: fixedTopCount > 0 && fixedLeftCount > 0,\n      _top: fixedTopCount > 0,\n      // _top: fixedTopCount > 0,\n      _topRight: fixedTopCount > 0 && fixedRightCount > 0,\n      _left: fixedLeftCount > 0,\n      _right: fixedRightCount > 0,\n      _bottomLeft: fixedBottomCount > 0 && fixedLeftCount > 0,\n      _bottom: fixedBottomCount > 0,\n      _bottomRight: fixedBottomCount > 0 && fixedRightCount > 0,\n    }\n\n    \n  })\n);\n\nconst Enhance = enhance(WidgetTable);\n\nEnhance.propTypes = {\n  name: PropTypes.string,\n}\n\nEnhance.defaultProps = {\n  name: 'aaa',\n}\n\nexport default Enhance;\n"]}]}